<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="SplashFromTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAACAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8zAAX/ahUM8nMmFPJz
        JhTzeTEV83kxFfN5MRXzeTEV83kxFfN5MRXycyYU8nMmFOtiFA3/ZgAFAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6W8hF+5z
        KjztdTBk7nYxaO53M2nudzNp7nczae53M2nudzNp7nczae52MWjvdTBk7nUuPep1KhgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADocS0t7HcxfOx3MtbudzLh7ncy4+53MuPueDLj7ngy4+53MuPudzLj7ncy4e52MtftdDJ/7nQyLgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPVsMRrsdTFt7Xcx3u14MvLteDP37Xgy+e55NPvueTT77Xkz+e55M/fveDLy7ncx3+92
        MW7tbS4cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAzGYZCupzLT7tdjCP73gxoe14McTtdzLm7nk0/+55NP/teDTo7Xcyx+13
        MqLtdTCQ73ExP/9mGQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6GguFul1MDvtdi9H7Hcwie13Ms3ueTT/7nk0/+55
        M9HtdjCO7XMtSe5zLzzeZCwXAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/wAAAf9VAAP/SQAH/2AgCP9/IAj/fyAI/38gCP9/IAj/fyAI/38gCOtiFA3veS9h73kyvO55
        NP/ueTT/7ncywu53MWn/dxEP/3EcCf9/IAj/fyAI/38gCP9/IAj/fyAI/38gCP9tAAf/fwAE/wAAAQAA
        AAAAAAAAAAAAAAAAAADlZhkK5mshH/F0LjfudS497ncxPu53MT7udzE+7ncxPu53MT7udzE+73IvQe12
        MITteDLL7nk0/+55NP/tdzTP7ncyifB2LkPudzE+7ncxPu53MT7udzE+7ncxPu53MT7qcy0+6XIsOvFq
        KiTrYicN/wAAAQAAAAAAAAAA220kB+15LTnsdzCL7XUxne52MpXtdzKP7Xcyj+13Mo/tdzKP7Xcyj+13
        Mo/tdzKQ7HgyqO54MsHteDLU7Xgy1Ox3MsPtdjGq73cykO13Mo/tdzKP7Xcyj+13Mo/tdzKP7Xcyj+x2
        MZHsdjCV7nYwle11MkjvcDAQAAAAAAAAAADrdicN7nYwW+14MszudjC17XcwkOx3MXzsdzF87HcxfOx3
        MXzsdzF87HcxfOx3MXzsdzF87HcxfOx3MXzsdzF87HcxfOx3MXzsdzF87HcxfOx3MXzsdzF87HcxfOx3
        MXzsdzF87Xgxgu53MZbudzHT7HYycO12LhwAAAAAAAAAAONxKhLtdzJl7Xgz0O13L4Hscys173AgEO9w
        IBDvcCAQ73AgEO9wIBDvcCAQ73AgEO9wIBDvcCAQ73AgEO9wIBDvcCAQ73AgEO9wIBDvcCAQ73AgEO9w
        IBDvcCAQ73AgEO9wIBDscSYb7XQsRu14M9DudzJ68HUsIwAAAAAAAAAA8XEqEu13MmXteTTP7nUyevN2
        LCn/fwAC/38AAv9/AAL/fwAC/38AAv9/AAL/fwAC/38AAv9/AAL/fwAC/38AAv9/AAL/fwAC/38AAv9/
        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
        IAj/fyAI5XMmFO91MT/tdzTP7ncyeupxKiQAAAAAAAAAAO9wIBDvdjJh7ncz0+94M6XvejNz7nozWu56
        M1ruejNa7nozWu56M1ruejNa7nozWu56M1ruejNa7nozWu56M1ruejNa7nozWu56M1ruejNa7nozWu56
        M1ruejNa7nozWu56M1rveTJh7Xgxfe54Mtbrdi936HQuIQAAAAAAAAAA5WYZCux2L1LueTLC7Xgy1O15
        Ms/teDPL7Xgzy+14M8vteDPL7Xgzy+14M8vteDPL7Xgzy+14M8vteDPL7Xgzy+14M8vteDPL7Xgzy+14
        M8vteDPL7Xgzy+14M8vteDPL7Xgzy+14M8zueDPN7Xgzze13MGXqdSoYAAAAAAAAAAD/AAAB6W8hF+x0
        KkLvdi5u7ncwdu52MXfudjF37nYxd+52MXfudjF37nYxd+52MXfudjF37nYxd+52MXfudjF37nYxd+52
        MXfudjF37nYxd+52MXfudjF37nYxd+52MXfudjF37ncydu94MHDsdC9R7nMpH/9VAAMAAAAAAAAAAAAA
        AAD/fwAE73AgEPB4LSLreS8m63YuJ+t2Lifrdi4n63YuJ+t2Lifrdi4n63YuJ+t2Lifrdi4n63YuJ+t2
        Lifrdi4n63YuJ+t2Lifrdi4n63YuJ+t2Lifrdi4n63YuJ+t2Lifrdi4n6nEqJPN0Ixb/bSQHAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////+AH///gB///4Af///gf///8P///+B//4AAAB+P/
        /8fn///37///9+////fv///37///9+////fv///37///9+////fv///37///9+////fv///37///9+//
        //fn///34AAAB/////////////////////8=
</value>
  </data>
</root>